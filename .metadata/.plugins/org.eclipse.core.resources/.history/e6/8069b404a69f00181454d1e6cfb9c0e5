  
import com.datastax.driver.core.Cluster;  
import com.datastax.driver.core.Host;  
import com.datastax.driver.core.Metadata;
import com.datastax.driver.core.ResultSet;
import com.datastax.driver.core.Session;
import com.datastax.driver.core.SimpleStatement;
import com.datastax.driver.core.Statement;
import com.datastax.driver.core.querybuilder.Insert;
import com.datastax.driver.core.querybuilder.QueryBuilder;

import static java.lang.System.out;  
  
/** 
 * Class used for connecting to Cassandra database. 
 */  
public class CassandraConnector  
{  
   private Cluster cluster;    
   private Session session;  

   
   public void connect(final String node, final int port)  
   {  
      this.cluster = Cluster.builder().addContactPoint(node).withPort(port).build();  
      final Metadata metadata = cluster.getMetadata();  
      System.out.printf("Connected to cluster: %s\n", metadata.getClusterName());  
      for (final Host host : metadata.getAllHosts())  
      {  
         System.out.printf("Datacenter: %s; Host: %s; Rack: %s\n",  
            host.getDatacenter(), host.getAddress(), host.getRack());  
      }  
      session = cluster.connect();  
   }  
  
 
   public Session getSession()  
   {  
      return this.session;  
   }  
  
 
   public void close()  
   {  
      cluster.close();  
      session.close();
   }  
   
	

	 
	public void createTable() {
//		  session.execute("CREATE KEYSPACE IF NOT EXISTS news WITH replication "
//		            + "= {'class':'SimpleStrategy', 'replication_factor':2};");
//		  
//		   session.execute("CREATE TABLE IF NOT EXISTS news.rss (" + "id uuid PRIMARY KEY,"
//				   + "date timestamp," + "title text,"  + "url text," + "link text" + ");");
//		   
		   String createKS = "CREATE KEYSPACE news WITH REPLICATION = { 'class': 'SimpleStrategy', 'replication_factor': '2' }";
	        session.execute(createKS);
	        String query = "create table news.rss (id uuid primary key,title text, link text);";
	        session.execute(query);
		   
		   System.out.println("Created new table");  
	}
	
	public void insertNews(News news)  {  
			session.execute(  
			      "INSERT INTO news.rss (id, date,title, url, link) VALUES (?, ?, ?, ? , ?)",  
			      news.getId(),news.getDate(),news.getTitle(), news.getUrl(), news.getLink());  
	}  
	
	public void ins() {
		 try
		    {
		        String createKS = "CREATE KEYSPACE test WITH REPLICATION = { 'class': 'SimpleStrategy', 'replication_factor': '2' }";
		        session.execute(createKS);
		        String query = "create table test.user (username text primary key,first text, last text);";
		        session.execute(query);

		        System.out.println("insert executed");
		        Insert insert = QueryBuilder.insertInto("test", "user")
		                                    .value("username", "jdoe")
		                                    .value("first", "John")
		                                    .value("last", "Doe");
		        System.out.println(insert.toString());
		        ResultSet result = session.execute(insert.toString());
		        System.out.println(result);
		    }
		    catch (Exception ex)
		    {
		        ex.printStackTrace();
		    }
	}
   

    
}  