import java.net.URL;
import java.text.ParseException;
import java.util.Iterator;
import java.util.List;

import com.rometools.rome.feed.synd.SyndEntry;
import com.rometools.rome.feed.synd.SyndFeed;
import com.rometools.rome.io.SyndFeedInput;
import com.rometools.rome.io.XmlReader;

public class Client {
	
	public static void main(final String[] args)  
	{  
	   final CassandraConnector client = new CassandraConnector();  
	   final String ipAddress = "localhost";  
	   final int port =  9042;  
	   System.out.println("Connecting to IP Address " + ipAddress + ":" + port + "...");  
	   client.connect(ipAddress, port);  
	
	   client.createTable();
	   
	   //Download Rss to DB
	   String url = "https://www.yahoo.com/news/rss";
	   ReadRss(client,url);
  
	   //Query
	   String urlForTest = "https://www.yahoo.com/news/" ;
	   String date = "2018-08-16"; // || null
	   
	   try {
		client.selectUrl(urlForTest, date);
	   } catch (ParseException e) {
		e.printStackTrace();
	   }
	  
	   
	   client.close();  
	}  
	
	
	  public static void ReadRss(CassandraConnector client ,String url) {
		System.out.println("Downloading Rss..");   
   	   try {
              URL feedUrl = new URL(url);
              SyndFeedInput input = new SyndFeedInput();
              SyndFeed feed = input.build(new XmlReader(feedUrl));
                  
              List<SyndEntry> entries = feed.getEntries();
              Iterator<SyndEntry> it = entries.iterator();
              News news;
              while (it.hasNext()) {
                SyndEntry entry = it.next();
                   
                news = new News(entry.getPublishedDate(), entry.getTitle(),  entry.getSource().getLink(), entry.getLink());
                client.insertNews(news);  
              }

            
          }
          catch (Exception ex) {
              ex.printStackTrace();
              System.out.println("ERROR: "+ex.getMessage());
          }
   }

}
